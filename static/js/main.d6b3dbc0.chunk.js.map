{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","sortGoods","sortType","sort","a","b","NONE","ALPHABETICALLY","localeCompare","length","App","useState","setSortType","isReversed","setIsReversed","goods","reverse","className","type","onClick","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,kDAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,mCAAAA,I,oBAAAA,M,KAML,IAAME,EAAY,SAACC,GAAD,MAAgC,UAAIF,GACnDG,MAAK,SAACC,EAAUC,GACf,OAAIH,IAAaH,EAASO,KACjB,EAGFJ,IAAaH,EAASQ,eACzBH,EAAEI,cAAcH,GAChBD,EAAEK,OAASJ,EAAEI,WAGRC,EAAgB,WAC3B,MAAgCC,mBAASZ,EAASO,MAAlD,mBAAOJ,EAAP,KAAiBU,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMC,EAAkBF,EAEpBZ,EAAUC,GAAUc,UADpBf,EAAUC,GAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAaH,EAASQ,gBAAkB,YACrEY,QAAS,kBAAMP,EAAYb,EAASQ,iBAHtC,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAuBf,IAAaH,EAASqB,QAAU,YAChED,QAAS,kBAAMP,EAAYb,EAASqB,SAHtC,4BAQA,wBACEF,KAAK,SACLD,UAAS,6BAAwBJ,GAAc,YAC/CM,QAAS,kBAAML,GAAeD,IAHhC,sBAQEA,GAAcX,IAAaH,EAASO,OACpC,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPL,GAAc,GACdF,EAAYb,EAASO,OALzB,sBAaJ,6BACE,6BACGS,EAAMM,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cClFtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6b3dbc0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABETICALLY,\n  LENGTH,\n}\n\nconst sortGoods = (sortType:SortType):string[] => [...goodsFromServer]\n  .sort((a:string, b:string) => {\n    if (sortType === SortType.NONE) {\n      return 0;\n    }\n\n    return sortType === SortType.ALPHABETICALLY\n      ? a.localeCompare(b)\n      : a.length - b.length;\n  });\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods:string[] = !isReversed\n    ? sortGoods(sortType)\n    : sortGoods(sortType).reverse();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABETICALLY && 'is-light'}`}\n          onClick={() => setSortType(SortType.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}